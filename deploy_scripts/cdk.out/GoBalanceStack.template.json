{
 "Resources": {
  "GoBalanceVPC4F3A770E": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/Resource"
   }
  },
  "GoBalanceVPCPublicSubnet1Subnet1845965C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet1/Subnet"
   }
  },
  "GoBalanceVPCPublicSubnet1RouteTable3340E671": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet1/RouteTable"
   }
  },
  "GoBalanceVPCPublicSubnet1RouteTableAssociationB20E56B7": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "GoBalanceVPCPublicSubnet1RouteTable3340E671"
    },
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "GoBalanceVPCPublicSubnet1DefaultRouteF3DE205D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "GoBalanceVPCIGWC9206C70"
    },
    "RouteTableId": {
     "Ref": "GoBalanceVPCPublicSubnet1RouteTable3340E671"
    }
   },
   "DependsOn": [
    "GoBalanceVPCVPCGWA95CADFC"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "GoBalanceVPCPublicSubnet1EIPA1A919BE": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet1/EIP"
   }
  },
  "GoBalanceVPCPublicSubnet1NATGatewayB7832E24": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "GoBalanceVPCPublicSubnet1EIPA1A919BE",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "GoBalanceVPCPublicSubnet1DefaultRouteF3DE205D",
    "GoBalanceVPCPublicSubnet1RouteTableAssociationB20E56B7"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet1/NATGateway"
   }
  },
  "GoBalanceVPCPublicSubnet2Subnet407B78A5": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-south-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet2/Subnet"
   }
  },
  "GoBalanceVPCPublicSubnet2RouteTable1C0107B1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet2/RouteTable"
   }
  },
  "GoBalanceVPCPublicSubnet2RouteTableAssociationADD126B5": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "GoBalanceVPCPublicSubnet2RouteTable1C0107B1"
    },
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet2Subnet407B78A5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "GoBalanceVPCPublicSubnet2DefaultRouteA3BD7CAB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "GoBalanceVPCIGWC9206C70"
    },
    "RouteTableId": {
     "Ref": "GoBalanceVPCPublicSubnet2RouteTable1C0107B1"
    }
   },
   "DependsOn": [
    "GoBalanceVPCVPCGWA95CADFC"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "GoBalanceVPCPublicSubnet2EIPF9695B6A": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet2/EIP"
   }
  },
  "GoBalanceVPCPublicSubnet2NATGateway0A00AF29": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "GoBalanceVPCPublicSubnet2EIPF9695B6A",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet2Subnet407B78A5"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "GoBalanceVPCPublicSubnet2DefaultRouteA3BD7CAB",
    "GoBalanceVPCPublicSubnet2RouteTableAssociationADD126B5"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PublicSubnet2/NATGateway"
   }
  },
  "GoBalanceVPCPrivateSubnet1SubnetE0D9743C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet1/Subnet"
   }
  },
  "GoBalanceVPCPrivateSubnet1RouteTableAAD010B8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet1/RouteTable"
   }
  },
  "GoBalanceVPCPrivateSubnet1RouteTableAssociation60E0DDAB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "GoBalanceVPCPrivateSubnet1RouteTableAAD010B8"
    },
    "SubnetId": {
     "Ref": "GoBalanceVPCPrivateSubnet1SubnetE0D9743C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "GoBalanceVPCPrivateSubnet1DefaultRoute6A6EBD55": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "GoBalanceVPCPublicSubnet1NATGatewayB7832E24"
    },
    "RouteTableId": {
     "Ref": "GoBalanceVPCPrivateSubnet1RouteTableAAD010B8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "GoBalanceVPCPrivateSubnet2SubnetC0D8BE99": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "ap-south-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet2/Subnet"
   }
  },
  "GoBalanceVPCPrivateSubnet2RouteTable33873A95": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet2/RouteTable"
   }
  },
  "GoBalanceVPCPrivateSubnet2RouteTableAssociation591F72C6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "GoBalanceVPCPrivateSubnet2RouteTable33873A95"
    },
    "SubnetId": {
     "Ref": "GoBalanceVPCPrivateSubnet2SubnetC0D8BE99"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "GoBalanceVPCPrivateSubnet2DefaultRoute49A77C78": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "GoBalanceVPCPublicSubnet2NATGateway0A00AF29"
    },
    "RouteTableId": {
     "Ref": "GoBalanceVPCPrivateSubnet2RouteTable33873A95"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "GoBalanceVPCIGWC9206C70": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "GoBalanceStack/GoBalanceVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/IGW"
   }
  },
  "GoBalanceVPCVPCGWA95CADFC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "GoBalanceVPCIGWC9206C70"
    },
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/VPCGW"
   }
  },
  "GoBalanceVPCRestrictDefaultSecurityGroupCustomResourceB6ABEA7D": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "GoBalanceVPC4F3A770E",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "637423233104"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalanceVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:ap-south-1:637423233104:security-group/",
             {
              "Fn::GetAtt": [
               "GoBalanceVPC4F3A770E",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423233104-ap-south-1",
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "GoBalanceWorkerSG7E790175": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "GoBalanceStack/GoBalance_Worker-SG",
    "GroupName": "GoBalance_Worker-SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP on PORT 8080",
      "FromPort": 8080,
      "IpProtocol": "tcp",
      "ToPort": 8080
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalance_Worker-SG/Resource"
   }
  },
  "GoBalanceLBSGB400D1C4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "GoBalanceStack/GoBalance_LB-SG",
    "GroupName": "GoBalance_LB-SG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP on PORT 2000",
      "FromPort": 2000,
      "IpProtocol": "tcp",
      "ToPort": 2000
     }
    ],
    "VpcId": {
     "Ref": "GoBalanceVPC4F3A770E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/GoBalance_LB-SG/Resource"
   }
  },
  "AssetsBucket5CB76180": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "gobalance-assets-bucket-637423233104",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": false,
     "BlockPublicPolicy": false,
     "IgnorePublicAcls": false,
     "RestrictPublicBuckets": false
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:app_server:7f11bde4",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:load_balancer:69727578",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/AssetsBucket/Resource"
   }
  },
  "AssetsBucketPolicyFFACF6C4": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AssetsBucket5CB76180"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "AssetsBucket5CB76180",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AssetsBucket5CB76180",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AssetsBucket5CB76180",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/AssetsBucket/Policy/Resource"
   }
  },
  "AssetsBucketAutoDeleteObjectsCustomResource51BA1286": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AssetsBucket5CB76180"
    }
   },
   "DependsOn": [
    "AssetsBucketPolicyFFACF6C4"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/AssetsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423233104-ap-south-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AssetsBucket5CB76180"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "AppServerDeploymentAwsCliLayer9C2FCE18": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-637423233104-ap-south-1",
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/AppServerDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "AppServerDeploymentCustomResource443482F6": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-637423233104-ap-south-1"
    ],
    "SourceObjectKeys": [
     "4502f63b9092d4a1578ce4c92c88ed1b8c189c2548a2a2f4fa26320d241e433d.zip"
    ],
    "DestinationBucketName": {
     "Ref": "AssetsBucket5CB76180"
    },
    "DestinationBucketKeyPrefix": "app_server",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/AppServerDeployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-637423233104-ap-south-1",
        "arn:aws:s3:::cdk-hnb659fds-assets-637423233104-ap-south-1/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AssetsBucket5CB76180",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AssetsBucket5CB76180",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423233104-ap-south-1",
     "S3Key": "0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "AppServerDeploymentAwsCliLayer9C2FCE18"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LoadBalancerDeploymentAwsCliLayerA1B64B5C": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-637423233104-ap-south-1",
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/LoadBalancerDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "LoadBalancerDeploymentCustomResourceBD30E677": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-637423233104-ap-south-1"
    ],
    "SourceObjectKeys": [
     "a8cdbb5c3a21d22aa028d4462aef78f9fb637137a21d8dd67b8b6043a550f87c.zip"
    ],
    "DestinationBucketName": {
     "Ref": "AssetsBucket5CB76180"
    },
    "DestinationBucketKeyPrefix": "load_balancer",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/LoadBalancerDeployment/CustomResource/Default"
   }
  },
  "WorkerInstance1InstanceRoleD2335EB9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance1/InstanceRole/Resource"
   }
  },
  "WorkerInstance1InstanceProfileB084767E": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WorkerInstance1InstanceRoleD2335EB9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance1/InstanceProfile"
   }
  },
  "WorkerInstance17A892C48": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "IamInstanceProfile": {
     "Ref": "WorkerInstance1InstanceProfileB084767E"
    },
    "ImageId": "ami-09b0a86a2c84101e1",
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "GoBalanceWorkerSG7E790175",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance1"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n\n    \n\t\t#!/bin/bash\n\t\tapt-get update\n\t\tapt-get install -y golang-go unzip\n\t\n    mkdir -p /home/ubuntu/app\n    \n    # curl file from the given url\n    curl -O https://",
        {
         "Ref": "AssetsBucket5CB76180"
        },
        ".s3.ap-south-1.amazonaws.com/app_server/app_server/app_server\n\n    # copy the file to /home/ubuntu/app\n    cp app_server /home/ubuntu/app\n    \n    chmod +x /home/ubuntu/app/app_server\n\n    # Create .env file with environment variables\n    cat << EOF > /home/ubuntu/app/.env\nWORKER_DIR=\"/tmp/stats\"\nAVG_DELAY=500\nFAIL_PERCENT=0.100000\nWORKER_ID=1\nEOF\n\n    # Create stats directory\n    mkdir -p /home/ubuntu/app//tmp/stats\n\n    # Start the worker application\n    cd /home/ubuntu/app\n    ./app_server >> /home/ubuntu/app/app_server.log 2>&1 &\n"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "WorkerInstance1InstanceRoleD2335EB9"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance1/Resource"
   }
  },
  "WorkerInstance2InstanceRole11D59E10": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance2/InstanceRole/Resource"
   }
  },
  "WorkerInstance2InstanceProfileF55F8ECC": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WorkerInstance2InstanceRole11D59E10"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance2/InstanceProfile"
   }
  },
  "WorkerInstance2E3C4FA1C": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "IamInstanceProfile": {
     "Ref": "WorkerInstance2InstanceProfileF55F8ECC"
    },
    "ImageId": "ami-09b0a86a2c84101e1",
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "GoBalanceWorkerSG7E790175",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance2"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n\n    \n\t\t#!/bin/bash\n\t\tapt-get update\n\t\tapt-get install -y golang-go unzip\n\t\n    mkdir -p /home/ubuntu/app\n    \n    # curl file from the given url\n    curl -O https://",
        {
         "Ref": "AssetsBucket5CB76180"
        },
        ".s3.ap-south-1.amazonaws.com/app_server/app_server/app_server\n\n    # copy the file to /home/ubuntu/app\n    cp app_server /home/ubuntu/app\n    \n    chmod +x /home/ubuntu/app/app_server\n\n    # Create .env file with environment variables\n    cat << EOF > /home/ubuntu/app/.env\nWORKER_DIR=\"/tmp/stats\"\nAVG_DELAY=500\nFAIL_PERCENT=0.100000\nWORKER_ID=2\nEOF\n\n    # Create stats directory\n    mkdir -p /home/ubuntu/app//tmp/stats\n\n    # Start the worker application\n    cd /home/ubuntu/app\n    ./app_server >> /home/ubuntu/app/app_server.log 2>&1 &\n"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "WorkerInstance2InstanceRole11D59E10"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance2/Resource"
   }
  },
  "WorkerInstance3InstanceRoleBEB108DE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance3/InstanceRole/Resource"
   }
  },
  "WorkerInstance3InstanceProfile3EF97076": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WorkerInstance3InstanceRoleBEB108DE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance3/InstanceProfile"
   }
  },
  "WorkerInstance3A02D8C0A": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "IamInstanceProfile": {
     "Ref": "WorkerInstance3InstanceProfile3EF97076"
    },
    "ImageId": "ami-09b0a86a2c84101e1",
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "GoBalanceWorkerSG7E790175",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance3"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n\n    \n\t\t#!/bin/bash\n\t\tapt-get update\n\t\tapt-get install -y golang-go unzip\n\t\n    mkdir -p /home/ubuntu/app\n    \n    # curl file from the given url\n    curl -O https://",
        {
         "Ref": "AssetsBucket5CB76180"
        },
        ".s3.ap-south-1.amazonaws.com/app_server/app_server/app_server\n\n    # copy the file to /home/ubuntu/app\n    cp app_server /home/ubuntu/app\n    \n    chmod +x /home/ubuntu/app/app_server\n\n    # Create .env file with environment variables\n    cat << EOF > /home/ubuntu/app/.env\nWORKER_DIR=\"/tmp/stats\"\nAVG_DELAY=500\nFAIL_PERCENT=0.100000\nWORKER_ID=3\nEOF\n\n    # Create stats directory\n    mkdir -p /home/ubuntu/app//tmp/stats\n\n    # Start the worker application\n    cd /home/ubuntu/app\n    ./app_server >> /home/ubuntu/app/app_server.log 2>&1 &\n"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "WorkerInstance3InstanceRoleBEB108DE"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance3/Resource"
   }
  },
  "WorkerInstance4InstanceRoleE349D3FF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance4/InstanceRole/Resource"
   }
  },
  "WorkerInstance4InstanceProfile1D7EC663": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WorkerInstance4InstanceRoleE349D3FF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance4/InstanceProfile"
   }
  },
  "WorkerInstance43402CBF1": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "IamInstanceProfile": {
     "Ref": "WorkerInstance4InstanceProfile1D7EC663"
    },
    "ImageId": "ami-09b0a86a2c84101e1",
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "GoBalanceWorkerSG7E790175",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance4"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n\n    \n\t\t#!/bin/bash\n\t\tapt-get update\n\t\tapt-get install -y golang-go unzip\n\t\n    mkdir -p /home/ubuntu/app\n    \n    # curl file from the given url\n    curl -O https://",
        {
         "Ref": "AssetsBucket5CB76180"
        },
        ".s3.ap-south-1.amazonaws.com/app_server/app_server/app_server\n\n    # copy the file to /home/ubuntu/app\n    cp app_server /home/ubuntu/app\n    \n    chmod +x /home/ubuntu/app/app_server\n\n    # Create .env file with environment variables\n    cat << EOF > /home/ubuntu/app/.env\nWORKER_DIR=\"/tmp/stats\"\nAVG_DELAY=500\nFAIL_PERCENT=0.100000\nWORKER_ID=4\nEOF\n\n    # Create stats directory\n    mkdir -p /home/ubuntu/app//tmp/stats\n\n    # Start the worker application\n    cd /home/ubuntu/app\n    ./app_server >> /home/ubuntu/app/app_server.log 2>&1 &\n"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "WorkerInstance4InstanceRoleE349D3FF"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance4/Resource"
   }
  },
  "WorkerInstance5InstanceRole71F5134D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance5/InstanceRole/Resource"
   }
  },
  "WorkerInstance5InstanceProfileF4E8DC55": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WorkerInstance5InstanceRole71F5134D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance5/InstanceProfile"
   }
  },
  "WorkerInstance54C70B8B5": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "IamInstanceProfile": {
     "Ref": "WorkerInstance5InstanceProfileF4E8DC55"
    },
    "ImageId": "ami-09b0a86a2c84101e1",
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "GoBalanceWorkerSG7E790175",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "WorkerInstance5"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n\n    \n\t\t#!/bin/bash\n\t\tapt-get update\n\t\tapt-get install -y golang-go unzip\n\t\n    mkdir -p /home/ubuntu/app\n    \n    # curl file from the given url\n    curl -O https://",
        {
         "Ref": "AssetsBucket5CB76180"
        },
        ".s3.ap-south-1.amazonaws.com/app_server/app_server/app_server\n\n    # copy the file to /home/ubuntu/app\n    cp app_server /home/ubuntu/app\n    \n    chmod +x /home/ubuntu/app/app_server\n\n    # Create .env file with environment variables\n    cat << EOF > /home/ubuntu/app/.env\nWORKER_DIR=\"/tmp/stats\"\nAVG_DELAY=500\nFAIL_PERCENT=0.100000\nWORKER_ID=5\nEOF\n\n    # Create stats directory\n    mkdir -p /home/ubuntu/app//tmp/stats\n\n    # Start the worker application\n    cd /home/ubuntu/app\n    ./app_server >> /home/ubuntu/app/app_server.log 2>&1 &\n"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "WorkerInstance5InstanceRole71F5134D"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/WorkerInstance5/Resource"
   }
  },
  "LoadBalancerInstanceInstanceRole8B41295A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "LoadBalancerInstance"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/LoadBalancerInstance/InstanceRole/Resource"
   }
  },
  "LoadBalancerInstanceInstanceProfile7533126B": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "LoadBalancerInstanceInstanceRole8B41295A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/LoadBalancerInstance/InstanceProfile"
   }
  },
  "LoadBalancerInstance4D2E5D57": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "ap-south-1a",
    "IamInstanceProfile": {
     "Ref": "LoadBalancerInstanceInstanceProfile7533126B"
    },
    "ImageId": "ami-09b0a86a2c84101e1",
    "InstanceType": "t3.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "GoBalanceLBSGB400D1C4",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "GoBalanceVPCPublicSubnet1Subnet1845965C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "LoadBalancerInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n\n\t\t\t\n\t\t#!/bin/bash\n\t\tapt-get update\n\t\tapt-get install -y golang-go unzip\n\t\n\t\t\tmkdir -p /home/ubuntu/app\n\t\t\t\n\t\t\t# curl file from the given url for load_balancer\n\t\t\tcurl -O https://",
        {
         "Ref": "AssetsBucket5CB76180"
        },
        ".s3.ap-south-1.amazonaws.com/load_balancer/load_balancer/load_balancer\n\t\t\t\n\t\t\t# copy the load_balancer file to /home/ubuntu/app\n\t\t\tcp load_balancer /home/ubuntu/app\n\n\t\t\t# Create nodes.txt file with worker instance public IPs\n\t\t\tcat << EOF > /home/ubuntu/app/available_nodes.txt\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance17A892C48",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance2E3C4FA1C",
          "PublicIp"
         ]
        },
        "\n\nEOF\n\t\t\tcat << EOF > /home/ubuntu/app/standby_nodes.txt\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance3A02D8C0A",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance43402CBF1",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance54C70B8B5",
          "PublicIp"
         ]
        },
        "\n\nEOF\n\t\t\tcat << EOF > /home/ubuntu/app/all_nodes.txt\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance17A892C48",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance2E3C4FA1C",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance3A02D8C0A",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance43402CBF1",
          "PublicIp"
         ]
        },
        "\n",
        {
         "Fn::GetAtt": [
          "WorkerInstance54C70B8B5",
          "PublicIp"
         ]
        },
        "\n\nEOF\n\t\t\tcat << EOF > /home/ubuntu/app/.env\nPOOL=30\nMAX_WORKER=5\nWORKER=2\nEOF\n\t\t\t# Provide appropriate permissions\n\t\t\tchmod +x /home/ubuntu/app/load_balancer\n\t\t\tchmod +rw /home/ubuntu/app/available_nodes.txt\n\t\t\tchmod +rw /home/ubuntu/app/standby_nodes.txt\n\t\t\tchmod +rw /home/ubuntu/app/.env\n\t\t\t\n\t\t\t# Start the load balancer application\n\t\t\tcd /home/ubuntu/app\n\t\t\t./load_balancer >> /home/ubuntu/app/load_balancer.log 2>&1 &\n\t\t"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "LoadBalancerInstanceInstanceRole8B41295A"
   ],
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/LoadBalancerInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VQwU7DMAz9Fu5ZYAPtPgpMkxCqVrTr5KbuMEuTKXFWVVX/HaUZrThwes/PjvOeV3K5fpAPd9D6harOC02l7AsGdRbQ+mOPaiX7w0WJrDaHPBN5KDWpIpQGOWoz29vA+AmlxlmftY33VhEwWTMNR/K6yyN8AG+BsYVO5I6uwDgv3hlGZ3AaSE5u1YYZ1FeDhkWBKjjibutsuIwe/gg74xmMwrQy8UH4R9k/B3VOX91YgtxqUt0s3+pUPIMfXx/7Ci/adtGBTK2XSRDgPbKXmwiD0NCUFcg+q807dOgO6Hy8R0HmpJGteQtGjReaSFZP4iAIGtnvbTrwiLPFmf1my52tSeMwiD16G1xMHjzbZi5r808rd/ZKFbqYUozuC4YTmdMtw1FH/0dovdIkN63PNI2RBnGyS7l6lMv7ClxL5h5cs366+/ZECxcMU4Nyn/AH9DIY5HsCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "GoBalanceStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}